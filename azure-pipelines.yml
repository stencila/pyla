# Azure Pipelines config

jobs:
  - job: test
    strategy:
      matrix:
        # Tests currently fail on Python 3.8
        # See https://dev.azure.com/stencila/stencila/_build/results?buildId=5535&view=logs&j=38fd7a33-d748-558c-70ce-1912bb91ad52&t=415b5ed4-06c4-5967-2ee6-668119fa5b13&l=190
        #linux_38:
        #  image_name: ubuntu-latest
        #  python_version: 3.8
        #  tox_env: py38
        linux_37:
          image_name: ubuntu-latest
          python_version: 3.7
          tox_env: py37
        mac:
          image_name: macOS-latest
          python_version: 3.7
          tox_env: py37
        # Tests currently fail on windows
        # See https://github.com/stencila/pyla/issues/2
        # windows:
        #  image_name: windows-latest
        #  python_version: 3.8
        #  tox_env: py38
    pool:
      vmImage: $(image_name)
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: $(python_version)
        displayName: 'Install Python $(python_version)'

      - script: pip3 install -r requirements-dev.txt
        displayName: 'Install dev dependencies'

      - script: tox -e $(tox_env)
        displayName: 'Run tests'

      - script: make build
        displayName: 'Build package'

      # Only do these platform independent tasks on Linux and only
      # if succeeded so far

      - script: make lint
        condition: and(succeeded(), eq(variables['agent.os'], 'Linux'))
        displayName: 'Linting'
      
      - script: make docs
        condition: and(succeeded(), eq(variables['agent.os'], 'Linux'))
        displayName: 'Build docs'

      - script: bash <(curl -s https://codecov.io/bash)
        condition: and(succeeded(), eq(variables['agent.os'], 'Linux'))
        displayName: 'Upload coverage'


  - job: release
    dependsOn: test
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    pool:
      vmImage: ubuntu-latest
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: 3.8
        displayName: 'Install Python'

      - script: |
          # Install dev dependencies
          pip3 install -r requirements-dev.txt
          # Publish package (if necessary)
          git config user.name "Stencila CI Bot"
          git config user.email "ci@stenci.la"
          semantic-release publish
          # Publish docs
          # Sphinx autodoc needs to have prod deps
          # (e.g. stencila.schema) also installed
          python3 setup.py develop
          make docs
          git checkout -b gh-pages
          ls -a | grep -v 'docs\|\.git' | xargs rm -rf
          cp -r docs/_build/. .
          rm -rf docs
          git add -A
          git commit -m "docs(*): Update published docs"
          git remote add origin-pages https://$(GH_TOKEN)@github.com/stencila/pyla.git > /dev/null 2>&1
          git push --force --set-upstream origin-pages gh-pages 
        env:
          GH_TOKEN: $(GH_TOKEN)
          PYPI_USERNAME: stencila
          PYPI_PASSWORD: $(PYPI_PASSWORD)
        displayName: 'Release package'
